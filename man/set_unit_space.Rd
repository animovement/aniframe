% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/unit_set_space.R
\name{set_unit_space}
\alias{set_unit_space}
\title{Set the spatial unit of an aniframe object}
\usage{
set_unit_space(data, to_unit, calibration_factor = 1)
}
\arguments{
\item{data}{An aniframe object containing spatial coordinate data.}

\item{to_unit}{Character string specifying the target spatial unit. Must be
one of the permitted units defined in \code{default_metadata()$unit_space}.}

\item{calibration_factor}{Numeric value for scaling spatial coordinates.
Default is 1. When converting from standard units (mm, cm, m), this is
ignored and the appropriate conversion factor is calculated automatically.
When converting from "px" or "unknown", you must provide a calibration factor
to define the relationship between the current units and the target unit.}
}
\value{
An aniframe object with spatial coordinates converted to the specified
unit and updated metadata reflecting the new unit_space.
}
\description{
Converts spatial coordinates (x, y, z) in an aniframe object to a different
unit of measurement. The function handles both automatic unit conversion
between standard units and custom calibration from pixel or arbitrary units.
}
\details{
The function performs the following operations:
\itemize{
\item Validates that \code{to_unit} is a permitted spatial unit
\item Determines the current spatial unit from the object's metadata
\item If converting from standard units (mm, cm, m) to another standard unit,
automatically calculates the conversion factor
\item If converting from "px" or "unknown" units with \code{calibration_factor = 1},
issues an informational message and returns data unchanged
\item Applies the calibration factor to all spatial columns (x, y, z) that exist
in the data
\item Updates the object's unit_space metadata
}
}
\examples{
\dontrun{
# Convert from millimeters to centimeters (automatic conversion)
data_cm <- set_unit_space(data, to_unit = "cm")

# Convert from pixels to millimeters with custom calibration
# (e.g., 1 pixel = 0.5 mm)
data_mm <- set_unit_space(data, to_unit = "mm", calibration_factor = 0.5)
}

}
